const up = async (db) => {
  console.log('üóëÔ∏è Removing paper_type_prices table...');
  
  try {
    // –£–¥–∞–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É —Å —Ü–µ–Ω–∞–º–∏ —Ç–∏–ø–æ–≤ –±—É–º–∞–≥–∏
    await db.exec('DROP TABLE IF EXISTS paper_type_prices;');
    console.log('‚úÖ Paper type prices table removed');
  } catch (error) {
    console.log('‚ö†Ô∏è Paper type prices table may not exist:', error.message);
    // –ù–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É, —Ç–∞–∫ –∫–∞–∫ —Ç–∞–±–ª–∏—Ü–∞ –º–æ–∂–µ—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å
  }
};

const down = async (db) => {
  console.log('üîÑ Restoring paper_type_prices table...');
  
  try {
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç–∫–∞—Ç–∏—Ç—å)
    await db.exec(`
      CREATE TABLE IF NOT EXISTS paper_type_prices (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        paper_type_id INTEGER NOT NULL,
        density INTEGER NOT NULL,
        price REAL NOT NULL,
        created_at TEXT DEFAULT (datetime('now')),
        updated_at TEXT DEFAULT (datetime('now')),
        UNIQUE(paper_type_id, density),
        FOREIGN KEY(paper_type_id) REFERENCES paper_types(id) ON DELETE CASCADE
      );
    `);
    console.log('‚úÖ Paper type prices table restored');
  } catch (error) {
    console.log('‚ö†Ô∏è Failed to restore paper_type_prices table:', error.message);
    throw error;
  }
};

module.exports = { up, down };
