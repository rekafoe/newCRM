import { Database } from 'sqlite';

export async function up(db: Database): Promise<void> {
  console.log('üîó Creating link between paper_types and materials...');
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É material_id –≤ —Ç–∞–±–ª–∏—Ü—É paper_types (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
  try {
    await db.exec(`
      ALTER TABLE paper_types ADD COLUMN material_id INTEGER REFERENCES materials(id)
    `);
  } catch (error: any) {
    if (error.message.includes('duplicate column name')) {
      console.log('Column material_id already exists, skipping...');
    } else {
      throw error;
    }
  }
  
  // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
  await db.exec(`
    CREATE INDEX IF NOT EXISTS idx_paper_types_material_id ON paper_types(material_id)
  `);
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É category_id –≤ —Ç–∞–±–ª–∏—Ü—É paper_types –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏
  try {
    await db.exec(`
      ALTER TABLE paper_types ADD COLUMN category_id INTEGER REFERENCES material_categories(id)
    `);
  } catch (error: any) {
    if (error.message.includes('duplicate column name')) {
      console.log('Column category_id already exists, skipping...');
    } else {
      throw error;
    }
  }
  
  // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  await db.exec(`
    CREATE INDEX IF NOT EXISTS idx_paper_types_category_id ON paper_types(category_id)
  `);
  
  console.log('‚úÖ Paper types linked to materials');
}

export async function down(db: Database): Promise<void> {
  console.log('üîÑ Removing link between paper_types and materials...');
  
  // –£–¥–∞–ª—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
  await db.exec(`DROP INDEX IF EXISTS idx_paper_types_material_id`);
  await db.exec(`DROP INDEX IF EXISTS idx_paper_types_category_id`);
  
  // –£–¥–∞–ª—è–µ–º –∫–æ–ª–æ–Ω–∫–∏
  await db.exec(`ALTER TABLE paper_types DROP COLUMN material_id`);
  await db.exec(`ALTER TABLE paper_types DROP COLUMN category_id`);
  
  console.log('‚úÖ Paper types unlinked from materials');
}
